import streamlit as st
from codigos.arboles import *

st.header("游꺕")
st.markdown('<h1>츼rboles</h1>', unsafe_allow_html=True)
st.markdown(
    """
        <p>
            Los 치rboles son estructuras de datos que se caracterizan por almacenar sus nodos en forma jer치rquica, a diferencia de las listas
            que los almacenan en forma lineal.
        </p>
    """,
    unsafe_allow_html=True
)

st.markdown("<h2>Importante entender</h2>", unsafe_allow_html=True)
st.markdown(
    """<p>Los 치rboles se componen de los siguientes elementos:</p>""", unsafe_allow_html=True
)

col1, col2, col3, col4 = st.columns(4)

with col1:
    st.markdown("- <b>Nodos:</b> son todos los elementos que tiene un 치rbol", unsafe_allow_html=True)
    st.markdown("- <b>Ra칤z:</b> primer nodo del 치rbol, es 칰nico", unsafe_allow_html=True)
    st.markdown("- <b>Padre:</b> son todos los nodos que tienen al menos un hijo", unsafe_allow_html=True)
with col2:
    st.markdown("- <b>Hijo:</b> son todos los nodos que tienen un padre", unsafe_allow_html=True)
    st.markdown("- <b>Hermano:</b> son aquellos nodos que comparten un mismo padre", unsafe_allow_html=True)
    st.markdown("- <b>Hoja:</b> nodos que no tienen hijos", unsafe_allow_html=True)
with col3:
    st.markdown("- <b>Rama:</b> aquellos nodos que no son la ra칤z y tienen al menos un hijo", unsafe_allow_html=True)
    st.markdown("- <b>Nivel:</b> cada generaci칩n dentro del 치rbol es un nivel", unsafe_allow_html=True)
    st.markdown("- <b>Altura:</b> n칰mero m치ximo de niveles en un 치rbol", unsafe_allow_html=True)
with col4:
    st.markdown("- <b>Peso:</b> n칰mero de nodos que tiene un 치rbol", unsafe_allow_html=True)
    st.markdown("- <b>Orden:</b> n칰mero m치ximo de hijos que puede tener un nodo", unsafe_allow_html=True)
    st.markdown("- <b>Grado:</b> n칰mero mayor de hijos que tiene alguno de los nodos del 츼rbol", unsafe_allow_html=True)


tab1, tab2, tab3, tab4 = st.tabs(["츼rbol", "Ra칤z, rama, hoja", "Nodos padre e hijos", "Hermanos"])

with tab1:
    st.image("images/arboles/arbol.png")
with tab2:
    st.image("images/arboles/padreHermanos.png")
with tab3:
    st.image("images/arboles/padreHijo.png")
with tab4:
    st.image("images/arboles/RaizRamaHoja.png")

col11, col21 = st.columns(2)

with col11:
    st.markdown("<h2>츼rbol n-ario</h2>", unsafe_allow_html=True)
    st.markdown("Aquellos arboles donde el n칰mero m치ximo de hijos por nodo es de N.", unsafe_allow_html=True)
with col21:
    st.markdown("<h2>츼rbol binario</h2>", unsafe_allow_html=True)
    st.markdown("츼rbol n-ario de Grado 2, cada nodo solo puede tener m치ximo 2 hijos.", unsafe_allow_html=True)

st.divider()
st.header("En estructura de datos se utilizan 치rboles binarios")
st.subheader("Reglas")
st.markdown(
    """
        - Siempre va a haber un nodo raiz
        - Los datos menores o iguales a la ra칤z van a la izquierda
        - Los datos mayores van a la derecha de la ra칤z
    """
)

code_binary_tree()

st.divider()
st.header("Ejercicios")
st.write("""A continuaci칩n te mostraremos ejercicios para que apliques lo aprendido, la soluci칩n se muestra una vez indiques en el bot칩n
        que quieres verla, sin embargo te recomendamos que intentes resolverlo tu solo para tu mejor comprensi칩n. Recuerda que la mejor manera de 
        aprender es haci칠ndolo tu mismo.""")

ejercicio1()
ejercicio2()
ejercicio3()